 object rolando{
	var valorBaseHechiceria = 3
	var valorFuerzaOscura = 5
	var hechizoPreferido = espectroMalefico
	var valorBaseLucha = 1
	var artefactos = [collarDivino, mascaraOscura]//, espejo]
	var valorArmaduraBasica = 2  //conviene hacer un method armadura() que retorne 2?? () lo mismo para nivelHechi
	var refuerzo = cotaDeMalla //falta hacer que pueda no haber nada
	var armaduraTotal = valorArmaduraBasica + refuerzo.cantidadRefuerzo(self)
	var habilidadDeLucha = valorBaseLucha + self.valorArtefactos() + armaduraTotal
	var libroDeHechizos = [espectroMalefico] //se reemplaza hechizoPreferido???
	//¿Qué sucede si el libro de hechizos incluye como hechizo al mismo libro de hechizos?
	method prueba(){
		return hechizoPreferido
	}
	method valorArtefactos(){
		return artefactos.sum({artefacto => artefacto.unidadesDeLucha(self)}) 
	}
	method nivelHechiceria(){
		return valorBaseHechiceria * hechizoPreferido.poder() + valorFuerzaOscura
	}
	method cambiarHechizoPreferido(nuevoHechizo){
		hechizoPreferido = nuevoHechizo
		
	}
	method valorFuerzaOscura(){
		return valorFuerzaOscura
	}
	method eclipse(){
		valorFuerzaOscura *= 2
	}
	method seCreePoderoso(){
		return hechizoPreferido.esPoderoso()
	}
	method habilidadDeLucha(){
		return habilidadDeLucha 
	}
	method agregarArtefacto(artefacto){
		artefactos.add(artefacto)
	}
	method removerArtefacto(artefacto){
		artefactos.remove(artefacto)
	}
	method luchaMayorAMagia(){
		return self.habilidadDeLucha() > self.nivelHechiceria() // probar si se puede: habilidadDeLucha > nivelHechiceria
	}
	method armadura(){
		return armaduraTotal
	}
	method artefactos(){
		return artefactos
	}
	method valorLibroDeHechizos(){
		return libroDeHechizos.filer({hechizo => hechizo.esPoderoso()}).sum({hechizo => hechizo.poder()})
	}
	method estaCargado(){
		return artefactos.size() <= 5
	}
	
}

object espectroMalefico{
	var nombre = "espectro malefico"
	//var poder = nombre.size() // por que no funciona asi? devuelve size de "espectro malefico" a pesar de cambiarle el nombre
	method poder(){
		return nombre.size() //return poder
	}
	method esPoderoso(){
		return (self.poder() > 15)
	}
	method cambiarNombre(nuevoNombre){
		nombre = nuevoNombre
	}
	method cantidadRefuerzo(luchador){
		return nombre.size()
	}	
	method nombre(){
		return nombre
	}
}

object hechizoBasico{
	var poder = 10
	method poder(){
		return poder
	}
	method esPoderoso(){
		return false
	}
	method cantidadRefuerzo(luchador){
		return poder
	}	
}

object espadaDelDestino{
	var unidadesDeLucha = 3
	method unidadesDeLucha(luchador){
		return unidadesDeLucha
	}
}

object collarDivino{
	var perlas = 1
	var unidadesDeLucha = perlas
	method unidadesDeLucha(luchador){
		return unidadesDeLucha
	}
}

object mascaraOscura{
	method unidadesDeLucha(luchador){
		if((luchador.valorFuerzaOscura() / 2) < 4){
			return 4			
		}
		else 
			return luchador.valorFuerzaOscura()/2
	}
}

object cotaDeMalla{
	var cantidadRefuerzo = 1
	method cantidadRefuerzo(luchador){
		return cantidadRefuerzo
	}
}

object bendicion{
	method cantidadRefuerzo(luchador){
		return luchador.nivelHechiceria()
	}
}

object espejo{
	method unidadesDeLucha(luchador){
		return luchador.artefactos().max({artefacto => artefacto.unidadesDeLucha(luchador)}).unidadesDeLucha(luchador)//return luchador.artefactos().fold(0,{art1,art2 => art1.unidadesDeLucha(luchador).max(art2.unidadesDeLucha(luchador))})
	}	
}
